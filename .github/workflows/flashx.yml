# GitHub workflow for flashx application
name: FlashX

on:
  pull_request:
    branches: 
      - main
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - 'CITATION'
      - 'docs/'

# Worflow jobs listed below
jobs:         

  boiling-cli:
    name: "Boiling-CLI"
    runs-on: ubuntu-latest
    steps:
    - name: Login to Docker Hub
      run: |
          echo "::add-mask::${{secrets.DOCKER_HUB_PSK}}"
    - uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_HUB_USERNAME }}
        password: ${{secrets.DOCKER_HUB_PSK}}   
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install
    - name: Run examples/flashx
      run: |
          cd examples/flashx/boiling
          maple image build boiling ${{secrets.DOCKER_HUB_USERNAME}}/flash:boiling
          maple container pour --image=boiling
          maple container execute "mpirun -n 1 /home/run/flash4"
          maple container rinse
          maple image delete boiling

  boiling-api:
    name: "Boiling-API"
    runs-on: ubuntu-latest
    steps:
    - name: Login to Docker Hub
      run: |
          echo "::add-mask::${{secrets.DOCKER_HUB_PSK}}"
    - uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_HUB_USERNAME}}
        password: ${{secrets.DOCKER_HUB_PSK}}   
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install
    - uses: eWaterCycle/setup-singularity@v7
    - name: Run examples/flashx
      run: |
          cd examples/flashx/boiling
          python3 MapleAPI.py

  lidcav-mpi-run:
    name: "Lidcav-MPI-run"
    runs-on: ubuntu-latest
    steps:
    - name: Login to Docker Hub
      run: |
          echo "::add-mask::${{secrets.DOCKER_HUB_PSK}}"
    - uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_HUB_USERNAME}}
        password: ${{secrets.DOCKER_HUB_PSK}}   
    - uses: actions/checkout@v2
    - uses: ./.github/actions/install
    - uses: eWaterCycle/setup-singularity@v7
    - name: Run examples/flashx
      run: |
          sudo apt-get install -y libopenmpi-dev openmpi-bin
          cd examples/flashx/lidcav
          maple image build lidcav
          mpirun -n 1 maple container run --image=lidcav "/home/run/flashx"
